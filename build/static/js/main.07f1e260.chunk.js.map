{"version":3,"sources":["components/Notes.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"oMAciBA,EAZJ,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACXC,EAAQF,EAAKG,UACjB,qBAAuB,iBACzB,OACE,oCACF,wBAAIC,UAAU,QAAQJ,EAAKK,SAC3B,4BAAQC,QAASL,GAAmBC,K,gBCkBzB,EArBA,WACX,IAAMK,EAAUC,IAAMC,IAHV,cAINC,EAAc,CAChBC,GAAI,IACJN,QAAS,mCACTO,KAAM,2BACNT,WAAW,GAEf,OAAOI,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAa1C,EAVA,SAAAO,GAEX,OADgBT,IAAMU,KAdV,aAcwBD,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACJ,EAAIM,GAEhB,OADgBT,IAAMW,IAAN,UAnBJ,aAmBI,YAAwBR,GAAMM,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SChBvCK,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,yBAAKjB,UAAU,SACZiB,IAKDC,EAAS,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,yGA+FWC,EA1FL,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,0BAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACNC,IAECzB,MAAK,SAAA0B,GACJC,QAAQC,IAAI,sBACZX,EAASS,QAEZ,IAEH,IA4CMG,EAAcT,EAChBJ,EACAA,EAAMc,QAAO,SAAA3C,GAAI,OAAuB,IAAnBA,EAAKG,aAE5B,OACE,6BACE,qCACA,kBAAC,EAAD,CAAckB,QAASc,IACvB,6BACE,4BAAQ7B,QAAS,kBAAM4B,GAAYD,KAAnC,QACMA,EAAU,YAAc,QAGhC,4BACGS,EAAYE,KAAI,SAAA5C,GAAI,OACrB,kBAAC,EAAD,CAAM6C,IAAK7C,EAAKW,GAAIX,KAAMA,EAC1BC,iBAAkB,kBA5DC,SAACU,GAC1B,IAAMX,EAAO6B,EAAMiB,MAAK,SAAAC,GAAC,OAAIA,EAAEpC,KAAOA,KAChCqC,EAAW,2BAAQhD,GAAR,IAAcG,WAAYH,EAAKG,YAEhDmC,EACQ3B,EAAIqC,GACXnC,MAAK,SAAAoC,GACJnB,EAASD,EAAMe,KAAI,SAAA5C,GAAI,OAAIA,EAAKW,KAAOA,EAAKX,EAAOiD,SAEpDC,OAAM,SAAAC,GACLf,EAAgB,SAAD,OACJpC,EAAKK,QADD,sCAGf+C,YAAW,WACThB,EAAgB,QACf,KACHN,EAASD,EAAMc,QAAO,SAAAI,GAAC,OAAIA,EAAEpC,KAAOA,SA4CR0C,CAAmBrD,EAAKW,WAIlD,0BAAM2C,SA5CI,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBpD,QAAS0B,EACTnB,KAAM,IAAI8C,KACVvD,UAAWwD,KAAKC,SAAW,IAG7BtB,EACQmB,GACP5C,MAAK,SAAAoC,GACHnB,EAASD,EAAMb,OAAOiC,IACtBjB,EAAW,SAiCR,2BAAO6B,MAAO9B,EACd+B,SA3BiB,SAACP,GACxBf,QAAQC,IAAIc,EAAMQ,OAAOF,OACzB7B,EAAWuB,EAAMQ,OAAOF,UA2BlB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,QCzGRC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.07f1e260.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({note, toggleImportance}) => {\r\n    const label = note.important\r\n    ? 'make not important' : 'make important'\r\n    return (\r\n      <>\r\n    <li className='note'>{note.content}</li>\r\n    <button onClick={toggleImportance}>{label}</button>\r\n    </>\r\n    )\r\n  \r\n  }\r\n\r\n  export default Note","import axios from 'axios'\r\n\r\n\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    const nonExisting = {\r\n        id: 10000,\r\n        content: 'This note is not saved to server',\r\n        date: '2019-05-30T17:30:31.098Z',\r\n        important: true\r\n    }\r\n    return request.then(response => response.data.concat(nonExisting))\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React, {useState, useEffect} from 'react'\r\n\r\nimport Note from './components/Notes'\r\nimport noteService from './services/notes'\r\nimport './index.css'\r\n\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app,  Department of Computer Science, University of Helsinki 2020 </em>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\r\n\r\n  useEffect(() => {\r\n      noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        console.log('promised fulfilled')\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n  \r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important} \r\n    \r\n    noteService\r\n    .update(id, changedNote)\r\n    .then(returnedNote => {\r\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n    })\r\n    .catch(error => {\r\n      setErrorMessage(\r\n        `Note '${note.content}' was already deleted from server`\r\n      )\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n      setNotes(notes.filter(n => n.id !== id))\r\n    })\r\n  }\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date(),\r\n      important: Math.random() > 0.5,\r\n    }\r\n\r\n    noteService\r\n    .create(noteObject)\r\n    .then(returnedNote => {\r\n       setNotes(notes.concat(returnedNote))\r\n       setNewNote('')\r\n    })\r\n   \r\n  }\r\n\r\n  \r\n\r\n  const handleNoteChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important === true)\r\n\r\n    return (\r\n      <div>\r\n        <h1>Notes</h1> \r\n        <Notification message={errorMessage}/>\r\n        <div>\r\n          <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n          </button>\r\n        </div>\r\n        <ul>\r\n          {notesToShow.map(note => \r\n          <Note key={note.id} note={note} \r\n          toggleImportance={() => toggleImportanceOf(note.id)}\r\n          /> \r\n          )}\r\n        </ul>\r\n        <form onSubmit={addNote}>\r\n          <input value={newNote}\r\n          onChange={handleNoteChange}\r\n          />\r\n          <button type=\"submit\">save</button>\r\n        </form>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default App","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from './App'\n\n\n\n\n\n\n\n\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}